name: monolayer

on:
  push:
    paths:
      - ".github/workflows/monolayer.yml"
      - "apps/monolayer/**"
      - "internal/**"

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm install
      - name: Run check
        run: npx turbo check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm install
      - name: Run build
        run: npx turbo build

  test-pg:
    needs: [check, build]
    name: Test pg
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run pg tests
        run: npm run test -w internal/pg

  test-programs:
    needs: [check, build]
    name: Test programs
    runs-on: ubuntu-latest
    defaults:
      run:
        # GitHub Actions run without a TTY device. This is a workaround to get one,
        # based on https://github.com/actions/runner/issues/241#issuecomment-2019042651
        shell: 'script --return --quiet --log-out /dev/null --command "bash -e {0}"'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install pg_dump
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
          sudo apt-get update
          sudo apt-get -y install postgresql-client-16
      - name: Install dependencies
        run: npm ci
      - name: Run programs tests
        run: npm run test -w internal/programs
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
  test-monolayer:
    needs: [check, build]
    name: Test monolayer
    runs-on: ubuntu-latest
    defaults:
      run:
        # GitHub Actions run without a TTY device. This is a workaround to get one,
        # based on https://github.com/actions/runner/issues/241#issuecomment-2019042651
        shell: 'script --return --quiet --log-out /dev/null --command "bash -e {0}"'
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install pg_dump
        run: |
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg
          sudo apt-get update
          sudo apt-get -y install postgresql-client-16
      - name: Install dependencies
        run: npm ci
      - name: Run programs tests
        run: NO_COLOR=1 npx vitest --project monolayer
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
